<Page
    x:Class="BsodSimulator.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:BsodSimulator"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:BsodSimulator.Model"
    mc:Ignorable="d">

    <ScrollViewer Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />

            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Row="0"
                Grid.ColumnSpan="2"
                Margin="10">
                <TextBlock>Choose a mode</TextBlock>
                <StackPanel Orientation="Horizontal">
                    <RadioButton
                        Margin="10"
                        GroupName="color"
                        IsChecked="{x:Bind VM.ClassicBSOD, Mode=TwoWay, Converter={StaticResource MakeCompilerHappy}}">
                        BSOD(Classic)
                    </RadioButton>
                    <RadioButton
                        Margin="10"
                        GroupName="color"
                        IsChecked="{x:Bind VM.InsiderGSOD, Mode=TwoWay, Converter={StaticResource MakeCompilerHappy}}">
                        GSOD(Insider)
                    </RadioButton>
                    <RadioButton
                        Name="CustomColorRadioButton"
                        Margin="10"
                        GroupName="color">
                        Custom
                    </RadioButton>
                </StackPanel>
                <GridView
                    x:Name="Colors"
                    Grid.Row="0"
                    Grid.ColumnSpan="2"
                    Height="250"
                    Margin="10"
                    Header="Pick a color"
                    ItemsSource="{x:Bind VM.MyColors}"
                    SelectedItem="{x:Bind VM.SelectedColor, Mode=TwoWay, Converter={StaticResource MakeCompilerHappy}}"
                    Visibility="{x:Bind CustomColorRadioButton.IsChecked, Mode=OneWay,Converter={StaticResource BoolToVisibilityConverter}}">
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="model:MyColor">
                            <Border BorderBrush="Black" BorderThickness="2">
                                <Rectangle
                                    Width="30"
                                    Height="30"
                                    Fill="{x:Bind Brush}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip>
                                            <TextBlock Text="{x:Bind Name}" />
                                        </ToolTip>
                                    </ToolTipService.ToolTip>

                                </Rectangle>
                            </Border>

                        </DataTemplate>
                    </GridView.ItemTemplate>
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Margin" Value="0" />
                        </Style>
                    </GridView.ItemContainerStyle>



                </GridView>
            </StackPanel>
            <StackPanel
                Name="ValueStackPanel"
                Grid.Row="1"
                Margin="10">
                <TextBox
                    x:Name="Emoji"
                    Margin="10"
                    Header="Emoji"
                    Text="{x:Bind VM.Emoji, Mode=TwoWay}"
                    TextWrapping="Wrap" />
                <TextBox
                    x:Name="Description"
                    Margin="10"
                    Header="Descrption"
                    Text="{x:Bind VM.Description, Mode=TwoWay}"
                    TextWrapping="Wrap" />
                <TextBox
                    x:Name="Url"
                    Margin="10"
                    Header="Url"
                    Text="{x:Bind VM.Url, Mode=TwoWay}"
                    TextWrapping="Wrap" />
                <TextBox
                    x:Name="StopCode"
                    Margin="10"
                    Header="StopCode"
                    Text="{x:Bind VM.StopCode, Mode=TwoWay}"
                    TextWrapping="Wrap" />

                <StackPanel>
                    <CheckBox
                        Name="DynamicPercentageCheckBox"
                        Margin="10"
                        IsChecked="{x:Bind VM.DynamicPercentage, Mode=TwoWay,Converter={StaticResource MakeCompilerHappy}}">
                        Auto-incremental progress
                    </CheckBox>
                    <Slider
                        x:Name="Percent"
                        Margin="10"
                        Header="Progress"
                        IsEnabled="{x:Bind DynamicPercentageCheckBox.IsChecked.Value, Mode=OneWay, Converter={StaticResource BooleanNotConverter}}"
                        Maximum="100"
                        Minimum="0"
                        Value="{x:Bind VM.Percentage, Mode=TwoWay, Converter={StaticResource IntDoubleTwoWayConverter}}" />
                </StackPanel>
                <CheckBox
                    Margin="10"
                    IsChecked="{x:Bind VM.RestartUponComplete, Mode=TwoWay, Converter={StaticResource MakeCompilerHappy}}"
                    IsEnabled="{x:Bind DynamicPercentageCheckBox.IsChecked.Value, Mode=OneWay}">
                    Show restart page upon complete
                </CheckBox>
                <Button
                    Margin="10"
                    Background="{x:Bind VM.SelectedColor.Brush, Mode=OneWay}"
                    BorderThickness="0"
                    Command="{x:Bind VM.GoToBSODPageCommand}"
                    CommandParameter="{x:Bind Frame}">
                    Trigger bug check!
                </Button>
            </StackPanel>
            <TextBlock
                Name="NoteTextBlock"
                Grid.Row="1"
                Grid.Column="1"
                Margin="20"
                FontSize="25"
                TextWrapping="WrapWholeWords">
                <Run>
                    Please note that the application
                    will go
                </Run>
                <Run Foreground="Red">FULLSCREEN</Run>

                <Run>and make mouse cursor</Run>
                <Run Foreground="Red">INVISIBLE</Run>
                <Run>once you click the button.</Run>
                <Run>
                    If you check the &quot;Show restart page upon complete&quot; checkbox ,after the progress
                    go to 100% you'll be shown a restart page which takes forever to complete.
                </Run>
                <Run>
                    Please don't be shocked,since it's all
                </Run>
                <Run Foreground="Red">
                    FAKE.
                </Run>
                <LineBreak /><Run>You can always use titlebar and Task View(ALT+TAB) to exit the app</Run>

            </TextBlock>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Narrow">
                    <VisualState.Setters>
                        <Setter Target="ValueStackPanel.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="NoteTextBlock.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="Normal">
                    <VisualState.Setters>
                        <Setter Target="ValueStackPanel.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="NoteTextBlock.Visibility" Value="Visible" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </ScrollViewer>
</Page>
